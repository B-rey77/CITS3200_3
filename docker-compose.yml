version: "3"

services:
  app:
    build:
      context: .
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./certs:/var/lib/
    environment:
      - DB_HOST=db
      - DB_NAME=django
      - DB_USER=django
      - DB_PASS=password
      - DJANGO_DEBUG
      - DJANGO_HOSTNAME
      - SMTP_HOST
      - SMTP_USER
      - SMTP_PASSWORD
    depends_on:
      - db

  db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=django
      - POSTGRES_USER=django
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - pgsql-data:/var/lib/postgresql/data
  
  # from https://stackoverflow.com/questions/24718706/backup-restore-a-dockerized-postgresql-database?noredirect=1&lq=1
  pgbackups:
      image: prodrigestivill/postgres-backup-local
      restart: always
      #user: postgres:postgres # Optional: see below
      volumes:
          - ./pgbackups:/backups
      links:
          - db:db
      depends_on:
          - db
      environment:
          - POSTGRES_HOST=db
          - POSTGRES_DB=django
          - POSTGRES_USER=django
          - POSTGRES_PASSWORD=password
        #  - POSTGRES_PASSWORD_FILE=/run/secrets/db_password <-- alternative for POSTGRES_PASSWORD (to use with docker secrets)
          - POSTGRES_EXTRA_OPTS=-Z6 --schema=public --blobs
          - SCHEDULE=@daily
          - BACKUP_KEEP_DAYS=7
          - BACKUP_KEEP_WEEKS=4
          - BACKUP_KEEP_MONTHS=6
          - HEALTHCHECK_PORT=8081

  letsencrypt:
      image: certbot/certbot
      volumes:
          - ./etc-letsencrypt:/etc/letsencrypt
          - ./var-letsencrypt:/var/lib/letsencrypt
          - ./well_known:/well_known
      depends_on:
          - app
      command: >
        certonly -t -d ${DJANGO_HOSTNAME} --non-interactive --agree-tos -m ${LETS_ENCRYPT_EMAIL} --cert-name sslcert --webroot -w /well_known --test-cert


volumes:
  pgsql-data: