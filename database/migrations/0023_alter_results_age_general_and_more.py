# Generated by Django 4.1 on 2022-10-16 04:12

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("database", "0022_alter_studies_paper_link_alter_studies_paper_title"),
    ]

    operations = [
        migrations.AlterField(
            model_name="results",
            name="Age_general",
            field=models.CharField(
                blank=True,
                help_text="The general age grouping considered for inclusion by the study, classified as “all ages” (if studies did not have any age restrictions); “infants”, “young children”, “children and adolescents”, “18 years and younger” and “16 years and older”. ",
                max_length=50,
                verbose_name="Age Category (General)",
            ),
        ),
        migrations.AlterField(
            model_name="results",
            name="Age_standardisation",
            field=models.BooleanField(
                blank=True,
                help_text="Indicator variable which is “Yes” if point estimate is age-standardised and “No” or “Unknown” otherwise.",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="results",
            name="Defined_ARF",
            field=models.BooleanField(
                blank=True,
                help_text="Indicator variable which is “Yes” if point estimate has defined ARF and “No” or “Unknown” otherwise.",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="results",
            name="Denominator",
            field=models.PositiveIntegerField(
                blank=True,
                help_text="This variable reports the denominators for studies reporting point estimates as proportions (non-population based). ",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="results",
            name="GAS_attributable_fraction",
            field=models.BooleanField(
                blank=True,
                help_text="Indicator variable which is “Yes” if point estimate is a proportion which is GAS-specific and therefore represents a GAS-attributable fraction and “No” or “Unknown” otherwise.",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="results",
            name="Interpolated_from_graph",
            field=models.BooleanField(
                blank=True,
                help_text="Indicator variable which is “Yes” if point estimate is interpolated and “No” or “Unknown” otherwise.",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="results",
            name="Mortality_flag",
            field=models.BooleanField(
                blank=True,
                help_text="Indicator variable which is “Yes” if point estimate is a mortality estimate and “No” or “Unknown” otherwise.",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="results",
            name="Numerator",
            field=models.PositiveIntegerField(
                blank=True,
                help_text="This variable reports the numerators for studies reporting point estimates as proportions (non-population based). ",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="results",
            name="Point_estimate",
            field=models.CharField(
                blank=True,
                help_text="Must be interpreted together with Measure to provide the point estimate reported by the study within the correct measurement context. For example: 2020KATZ reports a point estimate of “4.6” and measure of “per 100,000 population”.  ",
                max_length=100,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="results",
            name="Proportion",
            field=models.BooleanField(
                blank=True,
                help_text="Indicator variable which is “Yes” if point estimate is a proportion and “No” or “Unknown” otherwise.",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="results",
            name="Recurrent_ARF_flag",
            field=models.BooleanField(
                blank=True,
                help_text="Indicator variable which is “Yes” if point estimate includes recurrent ARF and “No” or “Unknown” otherwise (applicable to ARF burden estimates only).",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="results",
            name="Year_start",
            field=models.PositiveSmallIntegerField(
                blank=True,
                help_text="Start year for the observed point estimates within the study, allowing for temporal mapping of the point estimates. ",
                null=True,
                validators=[
                    django.core.validators.MinValueValidator(1900),
                    django.core.validators.MaxValueValidator(2100),
                ],
            ),
        ),
        migrations.AlterField(
            model_name="results",
            name="Year_stop",
            field=models.PositiveSmallIntegerField(
                blank=True,
                help_text="End year for the observed point estimates within the study, allowing for temporal mapping of the point estimates. ",
                null=True,
                validators=[
                    django.core.validators.MinValueValidator(1900),
                    django.core.validators.MaxValueValidator(2100),
                ],
            ),
        ),
        migrations.AlterField(
            model_name="studies",
            name="Age_max",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=5,
                null=True,
                validators=[django.core.validators.MaxValueValidator(150.0)],
                verbose_name="Maximum age (years)",
            ),
        ),
        migrations.AlterField(
            model_name="studies",
            name="Age_min",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=5,
                null=True,
                validators=[django.core.validators.MaxValueValidator(150.0)],
                verbose_name="Minimum age (years)",
            ),
        ),
    ]
